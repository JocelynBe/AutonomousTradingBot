from dataclasses import dataclass, field
from typing import List

from utils.io_utils import SerializableDataclass


@dataclass
class OracleConfig(SerializableDataclass):
    smoothing_factor: float = 0
    fee: float = 0.1 / 100
    optimal_decisions_end_seq_warmup: int = 200


@dataclass
class FeaturizerConfig(SerializableDataclass):
    oracle_config: OracleConfig = field(default_factory=lambda: OracleConfig())
    INDICATOR_NAMES: List[str] = field(
        default_factory=lambda: [
            "acosc",
            "ad",
            "adosc",
            "adx",
            "adxr",
            "alligator",
            "alma",
            "ao",
            "apo",
            "aroon",
            "aroonosc",
            "atr",
            "avgprice",
            "bandpass",
            "beta",
            "bollinger_bands",
            "bollinger_bands_width",
            "bop",
            "cc",
            "cci",
            "cfo",
            "cg",
            "chande",
            "cksp",
            "cmo",
            "correl",
            "correlation_cycle",
            "cvi",
            "cwma",
            "damiani_volatmeter",
            "dec_osc",
            "decycler",
            "dema",
            "devstop",
            "di",
            "dm",
            "donchian",
            "dpo",
            "dti",
            "dx",
            "edcf",
            "efi",
            "ema",
            "emd",
            "emv",
            "epma",
            "er",
            "eri",
            "fisher",
            "fosc",
            "fwma",
            "gatorosc",
            "gauss",
            "high_pass",
            "high_pass_2_pole",
            "hma",
            "ht_dcperiod",
            "ht_dcphase",
            "ht_phasor",
            "ht_sine",
            "ht_trendline",
            "ht_trendmode",
            "hwma",
            "ichimoku_cloud_seq",
            "ift_rsi",
            "itrend",
            "jma",
            "jsa",
            "kama",
            "kaufmanstop",
            "kdj",
            "keltner",
            "kst",
            "kurtosis",
            "kvo",
            "linearreg",
            "linearreg_angle",
            "linearreg_intercept",
            "linearreg_slope",
            "lrsi",
            "ma",
            "maaq",
            "mab",
            "macd",
            "macdext",
            "mama",
            "marketfi",
            "mass",
            "mcginley_dynamic",
            "mean_ad",
            "median_ad",
            "medprice",
            "mfi",
            "midpoint",
            "midprice",
            "mom",
            "msw",
            "mwdx",
            "natr",
            "nma",
            "nvi",
            "obv",
            "pattern_recognition",
            "pfe",
            "pma",
            "ppo",
            "pvi",
            "pwma",
            "qstick",
            "reflex",
            "rma",
            "roc",
            "rocp",
            "rocr",
            "rocr100",
            "roofing",
            "rsi",
            "rsx",
            # "rvi",  # WARNING: Leads to RuntimeWarning: invalid value encountered in true_divide
            "safezonestop",
            "sar",
            "sarext",
            "sinwma",
            "skew",
            "sma",
            "smma",
            "sqwma",
            "srsi",
            "srwma",
            # "stc",  # WARNING: Leads to RuntimeWarning: invalid value encountered in true_divide
            "stddev",
            "stoch",
            "stochf",
            "supersmoother",
            "supersmoother_3_pole",
            "supertrend",
            "swma",
            "t3",
            "tema",
            "trange",
            "trendflex",
            "trima",
            "trix",
            "tsf",
            "tsi",
            "ttm_trend",
            "typprice",
            # "ui",  Broken, returns nan for the first 14 values
            "ultosc",
            "var",
            "vi",
            "vidya",
            "vlma",
            "vosc",
            "voss",
            "vpci",
            "vpt",
            "vpwma",
            "vwap",
            "vwma",
            "vwmacd",
            "wad",
            "wclprice",
            "wilders",
            "willr",
            "wma",
            "wt",
            "zlema",
            #  "zscore", fails too much
        ]
    )
    PATTERN_TYPES: List[str] = field(
        default_factory=lambda: [
            "CDL2CROWS",
            "CDL3BLACKCROWS",
            "CDL3INSIDE",
            "CDL3LINESTRIKE",
            "CDL3OUTSIDE",
            "CDL3STARSINSOUTH",
            "CDL3WHITESOLDIERS",
            "CDLABANDONEDBABY",
            "CDLADVANCEBLOCK",
            "CDLBELTHOLD",
            "CDLBREAKAWAY",
            "CDLCLOSINGMARUBOZU",
            "CDLCONCEALBABYSWALL",
            "CDLCOUNTERATTACK",
            "CDLDARKCLOUDCOVER",
            "CDLDOJI",
            "CDLDOJISTAR",
            "CDLDRAGONFLYDOJI",
            "CDLENGULFING",
            "CDLEVENINGDOJISTAR",
            "CDLEVENINGSTAR",
            "CDLGAPSIDESIDEWHITE",
            "CDLGRAVESTONEDOJI",
            "CDLHAMMER",
            "CDLHANGINGMAN",
            "CDLHARAMI",
            "CDLHARAMICROSS",
            "CDLHIGHWAVE",
            "CDLHIKKAKE",
            "CDLHIKKAKEMOD",
            "CDLHOMINGPIGEON",
            "CDLIDENTICAL3CROWS",
            "CDLINNECK",
            "CDLINVERTEDHAMMER",
            "CDLKICKING",
            "CDLKICKINGBYLENGTH",
            "CDLLADDERBOTTOM",
            "CDLLONGLEGGEDDOJI",
            "CDLLONGLINE",
            "CDLMARUBOZU",
            "CDLMATCHINGLOW",
            "CDLMATHOLD",
            "CDLMORNINGDOJISTAR",
            "CDLMORNINGSTAR",
            "CDLONNECK",
            "CDLPIERCING",
            "CDLRICKSHAWMAN",
            "CDLRISEFALL3METHODS",
            "CDLSEPARATINGLINES",
            "CDLSHOOTINGSTAR",
            "CDLSHORTLINE",
            "CDLSPINNINGTOP",
            "CDLSTALLEDPATTERN",
            "CDLSTICKSANDWICH",
            "CDLTAKURI",
            "CDLTASUKIGAP",
            "CDLTHRUSTING",
            "CDLTRISTAR",
            "CDLUNIQUE3RIVER",
            "CDLUPSIDEGAP2CROWS",
            "CDLXSIDEGAP3METHODS",
        ]
    )
